@using Docstore.Application.Models
@model Pagination

@if (Model == null) return;

<div class="bg-white dark:bg-gray-900 px-4 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-600 sm:px-6">
    @if (Model.TotalPages > 1)
    {
        <div class="flex-1 flex justify-between sm:hidden">
            @if (Model.PreviousPage != null)
            {
                <a up-target="[layout-table]" asp-route-page="@Model.PreviousPage" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                    Previous
                </a>
            }
            @if (Model.NextPage != null)
            {
                <a up-target="[layout-table]" asp-route-page="@Model.NextPage" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                    Next
                </a>
            }
        </div>
    }
    <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
        <div>
            <p class="text-sm text-gray-700 dark:text-gray-600">
                Showing
                <span class="font-medium">@(Model.PageSize * (Model.CurrentPage-1)+1)</span>
                to
                <span class="font-medium">@(Model.CurrentPage == Model.TotalPages ? @Model.TotalItems : (Model.PageSize * Model.CurrentPage))</span>
                of
                <span class="font-medium">@Model.TotalItems</span>
                results
            </p>
        </div>
        @if (Model.TotalPages > 1)
        {
            <div>
                <nav class="relative z-0 inline-flex rounded-md shadow-sm" aria-label="Pagination">

                    @if (Model.PreviousPage != null)
                    {
                        <a up-target="[layout-table]" asp-route-page="@Model.PreviousPage" class="relative inline-flex items-center px-4 py-2 rounded-l-md bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300">
                            <span class="sr-only">Previous</span>
                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>
                        </a>
                    }

                    @if (Model.CurrentPage > 2 && Model.CurrentPage < 3)
                    {
                        <a up-target="[layout-table]" asp-route-page="1" class="relative inline-flex items-center px-4 py-2 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300">
                            1
                        </a>
                        @if (Model.CurrentPage > 3)
                        {
                            <span class="relative inline-flex items-center px-4 py-2 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300">
                                ...
                            </span>
                        }
                    }

                    @for (var p = Model.GetNumberOfPagesBefore(); p <= Model.GetNumberOfPagesAfter(); p++)
                    {
                        if (p > Model.TotalPages || p <= 0)
                            continue;

                        if (p == 0)
                            p++;

                        var active = p == Model.CurrentPage ? "border border-primary-500 font-medium" : "";

                        <a up-target="[layout-table]" asp-route-page="@p" class="relative inline-flex items-center px-4 py-2 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300 @active">
                            @p
                        </a>
                    }

                    @if (Model.CurrentPage < Model.TotalPages - 1 && Model.CurrentPage > Model.TotalPages - 2)
                    {
                        if (Model.CurrentPage < Model.TotalPages - 2)
                        {
                            <span class="relative inline-flex items-center px-4 py-2 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300">
                                ...
                            </span>
                        }

                        <a up-target="[layout-table]" asp-route-page="@Model.TotalPages" class="relative inline-flex items-center px-4 py-2 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300">
                            @Model.TotalPages
                        </a>
                    }



                    @if (Model.NextPage != null)
                    {
                        <a up-target="[layout-table]" asp-route-page="@Model.NextPage" class="relative inline-flex items-center px-4 py-2 rounded-r-md bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300">
                            <span class="sr-only">Next</span>
                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" /></svg>
                        </a>
                    }
                </nav>
            </div>
        }
    </div>
</div>
